<?xml version="1.0" encoding="utf-8"?>
<modification>
	<name>Шаблон Revolution</name>
	<code>revolution</code>
	<version>5.x</version>
	<author>pikitos</author>
	<link></link>

	<file path="catalog/controller/startup/seo_url.php">
		<operation error="skip">
			<search><![CDATA[($data['route'] == 'information/information' && $key == 'information_id')]]></search>
			<add position="replace"><![CDATA[($data['route'] == 'revolution/revblog_blog' && $key == 'revblog_id') || ($data['route'] == 'revolution/revblog_category' && $key == 'revblog_category_id') || ($data['route'] == 'information/information' && $key == 'information_id')]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[} elseif ($key == 'path') {]]></search>
			<add position="before"><![CDATA[
				} elseif ($key == 'revblog_category_id') {
					$categories = explode('_', $value);
					foreach ($categories as $category) {
						$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "seo_url WHERE `query` = 'revblog_category_id=" . (int)$category . "'");
						if ($query->num_rows && $query->row['keyword']) {
							$url .= '/' . $query->row['keyword'];
						} else {
							$url = '';
							break;
						}
					}
					unset ($data[$key]);
			]]></add>
		</operation>
    </file>
    <file path="system/library/seopro.php">
		<operation error="skip">
			<search><![CDATA['article_id', 'blog_category_id']]></search>
			<add position="replace"><![CDATA['article_id', 'blog_category_id', 'revblog_category_id', 'revblog_id']]></add>
		</operation>
    </file>

	<file path="catalog/language/{ru-ru,russian}/extension/total/sub_total.php">
		<operation error="skip">
			<search><![CDATA[Итого]]></search>
			<add position="replace"><![CDATA[Стоимость товаров]]></add>
		</operation>
	</file>
	<file path="catalog/controller/common/search.php">
		<operation>
			<search><![CDATA[$this->load->language('common/search]]></search>
			<add position="after"><![CDATA[
				$this->load->language('revolution/revolution');
				$setting = $this->config->get('revtheme_header_search');
				$data['in_category'] = $setting['in_category'];
				if ($setting['in_category']) {
					$this->load->model('catalog/category');
					$data['search_in_category'] = $this->language->get('search_in_category');
					$data['search_in_category_text_all'] = $this->language->get('search_in_category_text_all');
							
					if (isset($this->request->get['category_id'])) {
						$category_id = $this->request->get['category_id'];
					} else {
						$category_id = 0;
					}
					
					$data['category_id'] = $category_id;			
					$data['search_categories'] = array();
					$search_in_categories = $this->model_catalog_category->getCategories(0);
					foreach ($search_in_categories as $search_category) {
						$data['search_categories'][] = array(
							'category_id' => $search_category['category_id'],
							'name'        => $search_category['name']
						);
					}
				}
				if ($setting['ajax_search_status']) {
					$data['text_ajaxsearch_model'] = $this->language->get('text_ajaxsearch_model');
					$data['text_ajaxsearch_manufacturer'] = $this->language->get('text_ajaxsearch_manufacturer');
					$data['text_ajaxsearch_price'] = $this->language->get('text_ajaxsearch_price');
					$data['text_ajaxsearch_stock'] = $this->language->get('text_ajaxsearch_stock');
					$data['text_ajaxsearch_rating'] = $this->language->get('text_ajaxsearch_rating');
				}
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[public function index() {]]></search>
			<add position="before"><![CDATA[
				public function ajaxLiveSearch() {
					$json = array();
					if(!empty($this->request->get['filter_name'])){
						$this->load->model('revolution/revolution');
						$this->load->model('tool/image');
						$this->load->language('revolution/revolution');
						
						$setting = $this->config->get('revtheme_header_search');
						
						$filter_mpn = ($setting['ajax_search_mpn']) ? true : false;
						$filter_manufacturer = ($setting['ajax_search_manufacturer']) ? true : false;
						$filter_isbn = ($setting['ajax_search_isbn']) ? true : false;
						$filter_jan = ($setting['ajax_search_jan']) ? true : false;
						$filter_ean = ($setting['ajax_search_ean']) ? true : false;
						$filter_upc = ($setting['ajax_search_upc']) ? true : false;
						$filter_sku = ($setting['ajax_search_sku']) ? true : false;
						$filter_model = ($setting['ajax_search_model']) ? true : false;
						$filter_tag = ($setting['ajax_search_tag']) ? true : false;
						$filter_description = ($setting['ajax_search_description']) ? true : false;
						
						$filterdata=array(
							'filter_name' => $this->request->get['filter_name'],
							'filter_category_id' => $this->request->get['filter_category_id'],
							'filter_mpn' => $filter_mpn,
							'filter_manufacturer' => $filter_manufacturer,
							'filter_isbn' => $filter_isbn,
							'filter_jan' => $filter_jan,
							'filter_ean' => $filter_ean,
							'filter_upc' => $filter_upc,
							'filter_sku' => $filter_sku,
							'filter_model' => $filter_model,
							'filter_tag' => $filter_tag,
							'filter_description' => $filter_description,
							'start' => 0,
							'limit' => ($setting['ajax_search_limit']!=0) ? $setting['ajax_search_limit'] : 5
						);
						
						if ($setting['ajax_search_cats']) {
							$cat_results = (array) $this->model_revolution_revolution->ajaxLiveSearchCats($filterdata);
							foreach($cat_results as $result){
								if (!empty($result)) {
									$json[] = array(
										'product_id' => $result['category_id'],
										'name' => $result['name'],
										'name1' => $result['name'],
										'image' => false,
										'price' => '',
										'special' => '',
										'reviews' => '',
										'href' => $this->url->link('product/category', '&path=' . $result['category_id'])
									);
								}
							}
						}
						if ($setting['ajax_search_mans']) {
							$man_results = (array) $this->model_revolution_revolution->ajaxLiveSearchMans($filterdata);
							foreach($man_results as $result){
								if (!empty($result)) {
									$json[] = array(
										'product_id' => $result['manufacturer_id'],
										'name' => $result['name'],
										'name1' => $result['name'],
										'image' => false,
										'price' => '',
										'special' => '',
										'reviews' => 'man',
										'href' => $this->url->link('product/manufacturer', '&manufacturer_id=' . $result['manufacturer_id'])
									);
								}
							}
						}
						
						$results = (array) $this->model_revolution_revolution->ajaxLiveSearch($filterdata);
						foreach($results as $result){
							if (!empty($result['image'])&&file_exists(DIR_IMAGE . $result['image'])) {
								$image = $this->model_tool_image->resize($result['image'], 50, 50);
							} else {
								$image = $this->model_tool_image->resize('no_image.png', 50, 50);
							}

							$product_settings = $this->config->get('revtheme_product_all');
							$zakaz = $product_settings['zakaz'];
							$zakaz_price_null = $product_settings['zakaz_price_null'];
							$revtheme_predzakaz_settings = $this->config->get('revtheme_predzakaz');
							$revtheme_predzakaz = $revtheme_predzakaz_settings['status'];
							$currency = $this->session->data['currency'];
							if ($this->customer->isLogged() || !$this->config->get('config_customer_price')) {
								if ($result['quantity'] < 1) {
									if ($zakaz) {
										$price = $this->currency->format($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')), $currency);
										$special = $result['special'] != 0.0000 ?  $this->currency->format($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax')), $currency) : 0;
									} else if ($revtheme_predzakaz) {
										$price = '<span style="color:#999"> '. $result['stock_status'] .'</span>';
										$special = false;
									} else {
										$price = '<span style="color:#999">' . $this->language->get('text_catalog_stiker_netu') . '</span>';
										$special = '';
									}
								} else if ($result['price'] == 0) {
									if ($zakaz_price_null) {
										$price = $this->currency->format($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')), $currency);
										$special = $result['special'] != 0.0000 ?  $this->currency->format($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax')), $currency) : 0;
									} else {
										$price = '<span style="color:#999">' . $this->language->get('text_catalog_stiker_netu') . '</span>';
										$special = '';
									}
								} else {
									$price = $this->currency->format($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')), $currency);
									$special = $result['special'] != 0.0000 ?  $this->currency->format($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax')), $currency) : 0;
								}
							} else {
								$price = false;
								$special = false;
							}

							$json[] = array(
								'product_id' => $result['product_id'],
								'name' => $result['name'],
								'name1' => $result['name'],
								'image' => $image,
								'price' => $price,
								'special' => $special,
								'reviews' => $result['reviews'],
								'href' => $this->url->link('product/product', '&product_id=' . $result['product_id'])
							);
						}
					}
					$this->response->addHeader('Content-Type: application/json');
					$this->response->setOutput(json_encode($json));
				}
			]]></add>
		</operation>
	</file>
	<file path="catalog/model/catalog/product.php">
		<!-- <operation> -->
		<!-- 	<search><![CDATA[$sql = "SELECT p.product_id, (SELECT AVG(rating)]]></search> -->
		<!-- 	<add position="replace"><![CDATA[$sql = "SELECT p.product_id, p.price, p.quantity > 0 as nalichie, p.price > 0 as nalichie2, (SELECT AVG(rating)]]></add> -->
		<!-- </operation> -->
		<operation>
			<search><![CDATA[$sql = "SELECT DISTINCT ps.product_id, (SELECT AVG(rating)]]></search>
			<add position="replace"><![CDATA[$sql = "SELECT DISTINCT ps.product_id, p.price, p.quantity > 0 as nalichie, p.price > 0 as nalichie2, (SELECT AVG(rating)]]></add>
		</operation>
		<operation>
			<search><![CDATA[if (isset($data['sort']) && in_array($data['sort'], $sort_data)) {]]></search>
			<add position="before"><![CDATA[
				$product_settings = $this->config->get('revtheme_product_all');
				$zakaz = $product_settings['zakaz'];
				$zakaz_price_null = $product_settings['zakaz_price_null'];
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[$sql .= " ORDER BY LCASE(" . $data['sort'] . ")";]]></search>
			<add position="replace"><![CDATA[
				if ($zakaz && $zakaz_price_null) {
					$sql .= " ORDER BY LCASE(" . $data['sort'] . ")";
				} else if ($zakaz && !$zakaz_price_null) {
					$sql .= " ORDER BY nalichie2 DESC, LCASE(" . $data['sort'] . ")";
				} else if (!$zakaz && $zakaz_price_null) {
					$sql .= " ORDER BY nalichie DESC, LCASE(" . $data['sort'] . ")";
				} else {
					$sql .= " ORDER BY nalichie2 DESC, nalichie DESC, LCASE(" . $data['sort'] . ")";
				}
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[$sql .= " ORDER BY (CASE WHEN special IS NOT NULL THEN special WHEN discount IS NOT NULL THEN discount ELSE p.price END)";]]></search>
			<add position="replace"><![CDATA[
				if ($zakaz && $zakaz_price_null) {
					$sql .= " ORDER BY (CASE WHEN special IS NOT NULL THEN special WHEN discount IS NOT NULL THEN discount ELSE p.price END)";
				} else if ($zakaz && !$zakaz_price_null) {
					$sql .= " ORDER BY nalichie2 DESC, (CASE WHEN special IS NOT NULL THEN special WHEN discount IS NOT NULL THEN discount ELSE p.price END)";
				} else if (!$zakaz && $zakaz_price_null) {
					$sql .= " ORDER BY nalichie DESC, (CASE WHEN special IS NOT NULL THEN special WHEN discount IS NOT NULL THEN discount ELSE p.price END)";
				} else {
					$sql .= " ORDER BY nalichie2 DESC, nalichie DESC, (CASE WHEN special IS NOT NULL THEN special WHEN discount IS NOT NULL THEN discount ELSE p.price END)";
				}
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[$sql .= " ORDER BY " . $data['sort'];]]></search>
			<add position="replace"><![CDATA[
				if ($zakaz && $zakaz_price_null) {
					$sql .= " ORDER BY " . $data['sort'];
				} else if ($zakaz && !$zakaz_price_null) {
					$sql .= " ORDER BY nalichie2 DESC, " . $data['sort'];
				} else if (!$zakaz && $zakaz_price_null) {
					$sql .= " ORDER BY nalichie DESC, " . $data['sort'];
				} else {
					$sql .= " ORDER BY nalichie2 DESC, nalichie DESC, " . $data['sort'];
				}
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[$sql .= " ORDER BY p.sort_order";]]></search>
			<add position="replace"><![CDATA[
				if ($zakaz && $zakaz_price_null) {
					$sql .= " ORDER BY p.sort_order";
				} else if ($zakaz && !$zakaz_price_null) {
					$sql .= " ORDER BY nalichie2 DESC, p.sort_order";
				} else if (!$zakaz && $zakaz_price_null) {
					$sql .= " ORDER BY nalichie DESC, p.sort_order";	
				} else {
					//if (isset($data['init_filter'])) {
					//	$sql .= " ORDER BY p.sort_order";
					//} else {
						$sql .= " ORDER BY nalichie2 DESC, nalichie DESC, p.sort_order";
					//}
				}
			]]></add>
		</operation>
		<operation>
			<search><![CDATA['ps.price',]]></search>
			<add position="after"><![CDATA['ps.date_end',]]></add>
		</operation>
		<operation>
			<search><![CDATA[$product_option_value['price_prefix'],]]></search>
			<add position="after"><![CDATA[
				'points' => $product_option_value['points'],
				'points_prefix' => $product_option_value['points_prefix'],
				'opt_image' => $product_option_value['opt_image'],
				'model' => $product_option_value['model'],
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[$query->row['viewed']]]></search>
			<add position="after"><![CDATA[,'options_buy' => $query->row['options_buy'], 'short_description' => html_entity_decode($query->row['short_description'], ENT_QUOTES, 'UTF-8')]]></add>
		</operation>
		<operation>
			<search><![CDATA[$product_option['required']]]></search>
			<add position="after"><![CDATA[,'opt_image' => $product_option['opt_image']]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$product_attribute['text']]]></search>
			<add position="replace"><![CDATA[html_entity_decode($product_attribute['text'], ENT_QUOTES, 'UTF-8')]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[round($query->row['rating']),]]></search>
			<add position="replace"><![CDATA[round($query->row['rating'], 1),]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[round(($query->row['rating'] === null) ? 0 : $query->row['rating']),]]></search>
			<add position="replace"><![CDATA[round(($query->row['rating'] === null) ? 0 : $query->row['rating'], 1),]]></add>
		</operation>
	</file>
	<file path="catalog/controller/product/special.php">
		<operation>
			<search><![CDATA[sort=p.model&order=DESC]]></search>
			<add position="after" offset="2"><![CDATA[
				require(DIR_APPLICATION.'controller/product/sorts_special.php');
			]]></add>
		</operation>
	</file>
	<file path="catalog/controller/product/search.php">
		<operation>
			<search><![CDATA[sort=p.model&order=DESC]]></search>
			<add position="after" offset="2"><![CDATA[
				require(DIR_APPLICATION.'controller/product/sorts_search.php');
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[$data['breadcrumbs'] = array();]]></search>
			<add position="before"><![CDATA[
				$setting_asearch = $this->config->get('revtheme_header_search');
				$data['ajax_search_description'] = false;
				if ($setting_asearch['ajax_search_description']) {$description = true; $data['ajax_search_description'] = true;}
			]]></add>
		</operation>
	</file>
	<file path="catalog/controller/information/sitemap.php">
		<operation>
			<search><![CDATA[$data['special']]]></search>
			<add position="before"><![CDATA[
				$data['revplast'] = $this->url->link('revolution/revplast');
				$data['revpbest'] = $this->url->link('revolution/revpbest');
				$data['revblog'] = $this->url->link('revolution/revblog');
				$data['revstorereview'] = $this->url->link('revolution/revstorereview');
				$this->load->language('revolution/revolution');
				$data['text_sitemap_last'] = $this->language->get('text_sitemap_last');
				$data['text_sitemap_best'] = $this->language->get('text_sitemap_best');
				$data['text_sitemap_special'] = $this->language->get('text_sitemap_special');
				$data['text_sitemap_blog'] = $this->language->get('text_sitemap_blog');
				$data['text_sitemap_review'] = $this->language->get('text_sitemap_review');
				$data['text_sitemap_contact'] = $this->language->get('text_sitemap_contact');
				$this->load->model('revolution/revolution');
				$data['revblog_categories'] = array();
				$categories = $this->model_revolution_revolution->getBlogCategories(0);
				foreach ($categories as $category) {
					$blogs = array();
					$filter=array('filter_category_id'=>$category['category_id'],'filter_sub_category'=>true);
					$results = $this->model_revolution_revolution->getBlogs($filter);
					foreach ($results as $result) {
						$blogs[] = array(
							'title'       => $result['title'],
							'href'        => $this->url->link('revolution/revblog', 'revblog_category_id=' . $category['category_id'] . '&revblog_id=' . $result['revblog_id'])
						);
					}
					$data['revblog_categories'][] = array(
						'title'    => $category['title'],
						'children' => $blogs,
						'href'     => $this->url->link('revolution/revblog_category', 'revblog_category_id=' . $category['category_id'])
					);
				}
			]]></add>
		</operation>
	</file>

	<file path="catalog/controller/information/contact.php">
		<operation>
			<search><![CDATA[$this->document->setTitle($this->language->get('heading_title'));]]></search>
			<add position="repace"><![CDATA[
				if ($this->config->get('revtheme_meta')['cont_meta_title'][(int)$this->config->get('config_language_id')]) {
					$this->document->setTitle($this->config->get('revtheme_meta')['cont_meta_title'][(int)$this->config->get('config_language_id')]);
				} else {
					$this->document->setTitle($this->language->get('heading_title'));
				}
				if ($this->config->get('revtheme_meta')['cont_meta_description'][(int)$this->config->get('config_language_id')]) {
					$this->document->setDescription($this->config->get('revtheme_meta')['cont_meta_description'][(int)$this->config->get('config_language_id')]);
				}
				if ($this->config->get('revtheme_meta')['cont_meta_keyword'][(int)$this->config->get('config_language_id')]) {
					$this->document->setKeywords($this->config->get('revtheme_meta')['cont_meta_keyword'][(int)$this->config->get('config_language_id')]);
				}
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[$data['locations'] = array();]]></search>
			<add position="before"><![CDATA[
				if ($this->config->get('revtheme_geo_set')['status']) {
					require_once(DIR_SYSTEM . 'library/revolution/SxGeo.php');
					$SxGeo = new SxGeo();
					if (!empty($_SERVER['HTTP_CLIENT_IP'])) {
						$ip = $_SERVER['HTTP_CLIENT_IP'];
					} else if (!empty($_SERVER['HTTP_X_FORWARDED_FOR'])) {
						$ip = $_SERVER['HTTP_X_FORWARDED_FOR'];
					} else {
						$ip = $_SERVER['REMOTE_ADDR'];
					}
					$ip_city = $SxGeo->getCity($ip)['city']['name_ru'];
					$ip_region = $SxGeo->getCityFull($ip)['region']['name_ru'];
					$rev_geo_data = $this->config->get('revtheme_geo');
					$data['rev_geos'] = array();
					if (!empty($rev_geo_data)){
						foreach ($rev_geo_data as $rev_geo) {
							if ($ip_city == $rev_geo['city'] || $ip_region == $rev_geo['city']) {
								$data['rev_geos'][] = array(
									'code' => $rev_geo['code'],
									'text' => $rev_geo['text'][$this->config->get('config_language_id')]
								);
							}
						}
					}
				}
				$data['config_email'] = $this->config->get('config_email');
				$header_phone = $this->config->get('revtheme_header_phone');
				$data['header_phone_cod'] = $header_phone[$this->config->get('config_language_id')]['cod'];
				$data['header_phone_number'] = $header_phone[$this->config->get('config_language_id')]['number'];
				if ($this->config->get('revtheme_geo_set')['status']) {
					foreach ($data['rev_geos'] as $rev_geo) {
						if ($data['header_phone_number'] == $rev_geo['code']) {
							$data['header_phone_number'] = $rev_geo['text'];
						}
					}
				}
				$data['header_phone_cod2'] = $header_phone[$this->config->get('config_language_id')]['cod2'];
				$data['header_phone_number2'] = $header_phone[$this->config->get('config_language_id')]['number2'];
				if ($this->config->get('revtheme_geo_set')['status']) {
					foreach ($data['rev_geos'] as $rev_geo) {
						if ($data['header_phone_number2'] == $rev_geo['code']) {
							$data['header_phone_number2'] = $rev_geo['text'];
						}
					}
				}
				$settings_all_settings = $this->config->get('revtheme_all_settings');
				$setting_footer_all = $this->config->get('revtheme_footer_all');
				$data['f_map'] = $setting_footer_all['f_map'];
				$results2 = $this->config->get('revtheme_footer_soc');
				if (!empty($results2)){
					$http_s = array("http://", "https://");
					foreach ($results2 as $result) {
						if ($settings_all_settings['soc_conts_url']) {
							$link_t = explode('/', str_replace($http_s,'',$result['link'][$this->config->get('config_language_id')]));
							$link_t = $link_t[0];
						} else {
							$link_t = $result['title'][$this->config->get('config_language_id')];
						}
						$data['revtheme_footer_socs'][] = array(
							'image'  => $result['image'],
							'link'   => $result['link'][$this->config->get('config_language_id')],
							'link_t' => $link_t,
							'title'  => $result['title'][$this->config->get('config_language_id')],
							'sort'   => $result['sort']
						);
					}
				} else {
					$data['revtheme_footer_socs'] = false;
				}
				if (!empty($data['revtheme_footer_socs'])){
					foreach ($data['revtheme_footer_socs'] as $key => $value) {
						$sort[$key] = $value['sort'];
					}
					array_multisort($sort, SORT_ASC, $data['revtheme_footer_socs']);
				}
				
				$dop_contact_status = $this->config->get('revtheme_header_dop_contacts_status');
				if ($dop_contact_status){
					$dop_contact = $this->config->get('revtheme_header_dop_contact');
					if (!empty($dop_contact)){
						foreach ($dop_contact as $result) {
							
							$style = '';
							$this->load->model('tool/image');
							if ($result['icontype']) {
								if ($result['icon'] == 'fa none') {
									$style = ' hidden';
								}
								$result_icon = '<i class="'.$result['icon'].$style.'"></i>';
							} else {
								if (!$result['image'] || $result['image'] == 'no_image.png') {
									$style = ' hidden';
								}
								$result_icon = '<img class="'.$style.'" src="'.$this->model_tool_image->resize($result['image'], 21, 21).'" alt=""/>';
							}
							$number = $result['number'][$this->config->get('config_language_id')];
							if ($this->config->get('revtheme_geo_set')['status']) {
								foreach ($data['rev_geos'] as $rev_geo) {
									if ($number == $rev_geo['code']) {
										$number = $rev_geo['text'];
									}
								}
							}
							
							$data['dop_contacts'][] = array(
								'icon' 		=> $result_icon,
								'number' 	=> $number,
								'href' 		=> $result['href'][$this->config->get('config_language_id')],
								'sort'  	=> $result['sort']
							);
						}
						
						foreach ($data['dop_contacts'] as $key => $value) {
							$sort_dop_contacts2[$key] = $value['sort'];
						}
						if (count($data['dop_contacts']) > 1) {
							array_multisort($sort_dop_contacts2, SORT_ASC, $data['dop_contacts']);
						}

					} else {
						$data['dop_contacts'] = false;
					}
				} else {
						$data['dop_contacts'] = false;
				}
				$data['settings_all_settings'] = $this->config->get('revtheme_all_settings');
				$data['yamap'] = html_entity_decode($settings_all_settings['yamap'], ENT_QUOTES, 'UTF-8');
				$this->load->language('revolution/revolution');
				$data['text_contact_ourcontacts'] = $this->language->get('text_contact_ourcontacts');
				$data['descript'] = html_entity_decode($settings_all_settings[$this->config->get('config_language_id')]['description'], ENT_QUOTES, 'UTF-8');
				if ($this->config->get('revtheme_all_settings')['pol_konf']) {
					$this->load->model('catalog/information');
					$information_info = $this->model_catalog_information->getInformation($this->config->get('revtheme_all_settings')['pol_konf']);
					if ($information_info) {
						if ($this->config->get('revtheme_all_settings')['pol_konf_tvivod']) {
							$data['text_agree_pol_konf'] = sprintf($this->language->get('text_agree_pol_konf_st'), $this->url->link('information/information', 'information_id=' . $this->config->get('revtheme_all_settings')['pol_konf'], true), $information_info['title'], $information_info['title']);
						} else {
							$data['text_agree_pol_konf'] = sprintf($this->language->get('text_agree_pol_konf'), $this->url->link('information/information', 'information_id=' . $this->config->get('revtheme_all_settings')['pol_konf'], true), $information_info['title']);
						}
					} else {
						$data['text_agree_pol_konf'] = '';
					}
				} else {
					$data['text_agree_pol_konf'] = '';
				}
				if (isset($this->error['agree_pol_konf'])) {
					$data['agree_pol_konf'] = $this->error['agree_pol_konf'];
				} else {
					$data['agree_pol_konf'] = '';
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[if ((utf8_strlen($this->request->post['name']]]></search>
			<add position="before"><![CDATA[
				if ($this->config->get('revtheme_all_settings')['pol_konf']) {
					$this->load->language('revolution/revolution');
					$this->load->model('catalog/information');
					$information_info = $this->model_catalog_information->getInformation($this->config->get('revtheme_all_settings')['pol_konf']);
					if ($information_info && !isset($this->request->post['agree_pol_konf'])) {
						if ($this->config->get('revtheme_all_settings')['pol_konf_tvivod']) {
							$this->error['agree_pol_konf'] = sprintf($this->language->get('error_agree_pol_konf_st'), $information_info['title']);
						} else {
							$this->error['agree_pol_konf'] = $this->language->get('error_agree_pol_konf');
						}
					}
				}
			]]></add>
		</operation>
	</file>

	<file path="catalog/controller/common/footer.php">
		<operation error="skip">
			<search><![CDATA[$data['powered'] = sprintf($this->language->get('text_powered'), $this->config->get('config_name'), date('Y', time()));]]></search>
			<add position="replace"><![CDATA[
				if ($setting_footer_all['copy']) {
					$domen = $_SERVER['HTTP_HOST'];
					if(stristr($domen, 'xn--')) {
						require_once('catalog/controller/revolution/idna_convert.class.php');
						$idn = new idna_convert(array('idn_version'=>2008));
						$domen = (stripos($domen, 'xn--')!==false) ? $idn->decode($domen) : $idn->encode($domen);
					} else {					
						$domen = $_SERVER['HTTP_HOST'];
					}
					$data['powered'] = sprintf($this->language->get('text_powered_rev'), $domen, $this->config->get('config_name'), date('Y', time()));
				} else {
					$data['powered'] = $setting_footer_all[$this->config->get('config_language_id')]['copy_text'];
				}
				$data['cookies_text'] = '';
				if ($this->config->get('revtheme_all_settings')['cookies']) {
					$data['cookies_text'] = html_entity_decode($this->config->get('revtheme_all_settings')[$this->config->get('config_language_id')]['cookies_text'], ENT_QUOTES, 'UTF-8');
				}
			]]></add>
		</operation>
	</file>
	<file path="catalog/language/{ru-ru,russian}/extension/captcha/basic_captcha.php">
		<operation error="skip">
			<search><![CDATA[Введите код в поле ниже]]></search>
			<add position="replace"><![CDATA[Код с картинки]]></add>
		</operation>
	</file>
	<file path="catalog/language/{ru-ru,russian}/extension/captcha/google_captcha.php">
		<operation error="skip">
			<search><![CDATA[Введите код в поле ниже]]></search>
			<add position="replace"><![CDATA[Код с картинки]]></add>
		</operation>
	</file>
	<file path="catalog/model/catalog/review.php">
		<operation>
			<search><![CDATA[$query = $this->db->query("SELECT r.review_id, r.author, r.rating, r.text, p.product_id, pd.name, p.price, p.image, r.date_added FROM " . DB_PREFIX . "review r LEFT JOIN " . DB_PREFIX . "product p ON (r.product_id = p.product_id) LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) WHERE p.product_id = '" . (int)$product_id . "' AND p.date_available <= NOW() AND p.status = '1' AND r.status = '1' AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY r.date_added DESC LIMIT " . (int)$start . "," . (int)$limit);]]></search>
			<add position="replace"><![CDATA[$query = $this->db->query("SELECT r.review_id, r.author, r.rating, r.text, r.answer, r.answer_from, p.product_id, pd.name, p.price, p.image, r.date_added FROM " . DB_PREFIX . "review r LEFT JOIN " . DB_PREFIX . "product p ON (r.product_id = p.product_id) LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) WHERE p.product_id = '" . (int)$product_id . "' AND p.date_available <= NOW() AND p.status = '1' AND r.status = '1' AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY r.date_added DESC LIMIT " . (int)$start . "," . (int)$limit);]]></add>
		</operation>
	</file>
	<file path="catalog/controller/error/not_found.php">
		<operation error="skip">
			<search><![CDATA[$this->response->setOutput($this->load->view('error/not_found', $data));]]></search>
			<add position="replace"><![CDATA[
				$this->load->language('revolution/revolution');
				$data['text_not_found_message'] = $this->language->get('text_not_found_message');	
				$setting_all_settings = $this->config->get('revtheme_all_settings');
				$error404 = $setting_all_settings['error404'];
				if ($error404) {
					$this->response->setOutput($this->load->view('error/not_found_alt', $data));
				} else {	
					$this->response->setOutput($this->load->view('error/not_found', $data));
				}
			]]></add>
		</operation>
	</file>
	<file path="catalog/language/{ru-ru,russian}/{ru-ru,russian}.php">
		<operation error="skip">
			<search><![CDATA[<i class="fa fa-home"></i>]]></search>
			<add position="replace"><![CDATA[Главная]]></add>
		</operation>
	</file>
	<file path="catalog/language/*/*.php">
		<operation error="skip">
			<search><![CDATA[<i class="fa fa-home"></i>]]></search>
			<add position="replace"><![CDATA[Home]]></add>
		</operation>
	</file>
	<file path="catalog/controller/information/information.php">
		<operation>
			<search><![CDATA[$data['column_left']]]></search>
			<add position="before"><![CDATA[
				if ($this->config->get('revtheme_geo_set')['status']) {
					require_once(DIR_SYSTEM . 'library/revolution/SxGeo.php');
					$SxGeo = new SxGeo();
					if (!empty($_SERVER['HTTP_CLIENT_IP'])) {
						$ip = $_SERVER['HTTP_CLIENT_IP'];
					} else if (!empty($_SERVER['HTTP_X_FORWARDED_FOR'])) {
						$ip = $_SERVER['HTTP_X_FORWARDED_FOR'];
					} else {
						$ip = $_SERVER['REMOTE_ADDR'];
					}
					$ip_city = $SxGeo->getCity($ip)['city']['name_ru'];
					$ip_region = $SxGeo->getCityFull($ip)['region']['name_ru'];
					$rev_geo_data = $this->config->get('revtheme_geo');
					$data['rev_geos'] = array();
					if (!empty($rev_geo_data)){
						foreach ($rev_geo_data as $rev_geo) {
							if ($ip_city == $rev_geo['city'] || $ip_region == $rev_geo['city']) {
								$data['rev_geos'][] = array(
									'code' => $rev_geo['code'],
									'text' => $rev_geo['text'][$this->config->get('config_language_id')]
								);
							}
						}
					}
					foreach ($data['rev_geos'] as $rev_geo) {
						if (strpos($information_info['description'], $rev_geo['code'])) {
							$data['description'] = html_entity_decode(str_replace($rev_geo['code'], $rev_geo['text'], $information_info['description']), ENT_QUOTES, 'UTF-8');
						}
					}
				}
				$data['logo'] = '';
				$data['logo_width'] = '120';
				$data['logo_height'] = '120';
				$data['microdata_author'] = $data['microdata_name'] = $this->config->get('config_name');
				$data['microdata_date_info'] = date('Y-m-d', filectime(DIR_APPLICATION . 'model/revolution/revolution.php'));
				$data['microdata_url_info'] = $this->url->link('information/information', 'information_id=' .  $information_id);
			]]></add>
		</operation>
	</file>
	<file path="catalog/controller/extension/module/*.php">
		<operation error="skip">
			<search><![CDATA[$this->document->addStyle('catalog/view/javascript/jquery/swiper/css/swiper.min.css');]]></search>
			<add position="replace"><![CDATA[]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$this->document->addStyle('catalog/view/javascript/jquery/swiper/css/opencart.css');]]></search>
			<add position="replace"><![CDATA[]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$this->document->addScript('catalog/view/javascript/jquery/swiper/js/swiper.jquery.js');]]></search>
			<add position="replace"><![CDATA[]]></add>
		</operation>
	</file>
	<file path="system/library/cart/cart.php">
		<operation error="skip">
			<search><![CDATA[$option_data = array();]]></search>
			<add position="before"><![CDATA[
				$option_price_pl = false;
				$option_price1 = 0;
				$option_weight2 = 0;
				$opt_image = false;
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[} elseif ($option_value_query->row['price_prefix'] == '-') {]]></search>
			<add position="before"><![CDATA[
				} elseif ($option_value_query->row['price_prefix'] == '=') {
					$option_price1 = $option_value_query->row['price'];
					$option_price_pl = true;
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$product_data[] = array(]]></search>
			<add position="before"><![CDATA[
				if ($option_price_pl) {
					$allprice = $option_price1 + $option_price;
				} else {
					$allprice = $price + $option_price;
				}
				if ($option_weight2) {
					$option_weight = $option_weight2 + $option_weight;
				} else {
					$option_weight = $product_query->row['weight'] + $option_weight;
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[($price + $option_price)]]></search>
			<add position="replace"><![CDATA[$allprice]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[} elseif ($option_value_query->row['weight_prefix'] == '-') {]]></search>
			<add position="before"><![CDATA[
				} elseif ($option_value_query->row['weight_prefix'] == '=') {
					$option_weight2 = $option_value_query->row['weight'];
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[($product_query->row['weight'] + $option_weight)]]></search>
			<add position="replace"><![CDATA[$option_weight]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[pov.weight_prefix]]></search>
			<add position="replace"><![CDATA[pov.weight_prefix, pov.opt_image, pov.model]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$option_value_query->row['option_value_id'],]]></search>
			<add position="after"><![CDATA['opt_image' => $opt_image, 'model' => $option_value_query->row['model'],]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[if ($option_value_query->num_rows) {]]></search>
			<add position="after"><![CDATA[
				if($option_value_query->row['opt_image']) {
					$opt_image = $option_value_query->row['opt_image'];
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[if ($option_query->row['type'] == 'select' || $option_query->row['type'] == 'radio') {]]></search>
			<add position="replace"><![CDATA[if ($option_query->row['type'] == 'select' || $option_query->row['type'] == 'radio' || $option_query->row['type'] == 'image') {]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$product_query->row['model'],]]></search>
			<add position="replace"><![CDATA[$product_query->row['model'], 'sku' => $product_query->row['sku'], 'isbn' => $product_query->row['isbn'],]]></add>
		</operation>
		<operation>
			<search><![CDATA[if ($product_special_query->num_rows) {]]></search>
			<add position="after"><![CDATA[
				if ($product_special_query->row['price'] > 0.0 && $this->config->get('revtheme_product_all')['options_special']) {
					$special_koefficient = (float)$product_query->row['price'] / (float)$product_special_query->row['price'];
					if (is_array($option_price)) {
						foreach($option_price as $key1=>$operations){
							foreach($operations as $operation=>$value){
								if (($operation == '+' || $operation == '-' || $operation == '=') && (float)$special_koefficient ) {
									$option_price[$key1][$operation] = $value / $special_koefficient;
								}
							}
						}
					} else if ((float)$special_koefficient) {
						if (isset($option_value_query) && $option_value_query->row['price_prefix'] == '=') {
							$option_price1 /= $special_koefficient;
						} else {
							$option_price /= $special_koefficient;
						}
					}
				}
			]]></add>
		</operation>
	</file>
	<file path="catalog/controller/extension/module/{featured,bestseller,latest,special}.php">
		<operation error="skip">
			<search><![CDATA[$product_info]]></search>
			<add position="replace"><![CDATA[$result]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$this->load->model('catalog/product');]]></search>
			<add position="before"><![CDATA[
				$data['setting_all_settings'] = $this->config->get('revtheme_all_settings');
				$data['module_alt_id'] = crc32($setting['name']);
				$this->load->language('revolution/revolution');
				$data['revpopuporder_settings'] = $revpopuporder_settings = $this->config->get('revtheme_catalog_popuporder');
				$data['revpopuporder'] = $revpopuporder_settings['status'];
				$product_settings = $this->config->get('revtheme_product_all');
				$data['zakaz'] = $product_settings['zakaz'];
				$data['zakaz_price_null'] = $product_settings['zakaz_price_null'];
				$data['text_catalog_stiker_netu_2'] = $this->language->get('text_catalog_stiker_netu');
				$data['recalc_price'] = $product_settings['recalc_price'];
				$data['q_zavisimost'] = $product_settings['q_zavisimost'];
				$data['opt_price'] = $product_settings['opt_price'];
				$data['setting_catalog_all'] = $setting_catalog_all = $this->config->get('revtheme_catalog_all');
				$data['popup_view'] = $setting_catalog_all['popup_view'];
				$data['img_slider'] = $setting_catalog_all['img_slider'];
				$data['rev_srav_prod'] = $setting_catalog_all['rev_srav_prod'];
				$data['rev_wish_prod'] = $setting_catalog_all['rev_wish_prod'];
				$data['ch_quantity'] = $setting_catalog_all['ch_quantity'];
				$data['chislo_ryad'] = $setting_catalog_all['chislo_ryad'];
				$data['text_catalog_stiker_last'] = $this->language->get('text_catalog_stiker_last');
				$data['text_catalog_stiker_best'] = $this->language->get('text_catalog_stiker_best');
				$data['text_catalog_revpopup_purchase'] = $this->language->get('text_catalog_revpopup_purchase');
				$data['text_catalog_revpopup_view'] = $this->language->get('text_catalog_revpopup_view');
				$data['text_catalog_price_na_zakaz'] = $this->language->get('text_catalog_price_na_zakaz');
				$description_options = $this->config->get('revtheme_cat_attributes');
				$data['description_options'] = $this->config->get('revtheme_cat_attributes');
				$data['text_select'] = $this->language->get('text_select');
				$data['revtheme_product_all'] = $this->config->get('revtheme_product_all');
				$data['text_option_option'] = $this->language->get('text_option_option');
				$revtheme_home_all = $this->config->get('revtheme_home_all');
				$data['setting_img_width'] = $setting['width'];
				$revpopuppredzakaz_settings = $this->config->get('revtheme_predzakaz');
				$data['predzakaz_button'] = $revpopuppredzakaz_settings['status'];
				$data['text_predzakaz'] = $this->config->get('revtheme_predzakaz')['notify_status'] ? $this->language->get('text_predzakaz_notify') : $this->language->get('text_predzakaz');
				$config_image_popup_width = $this->config->get('theme_' . $this->config->get('config_theme') . '_image_popup_width');
				$config_image_popup_height = $this->config->get('theme_' . $this->config->get('config_theme') . '_image_popup_height');
				$config_image_product_width = $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width');
				$config_image_product_height = $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height');
				$currency = $this->session->data['currency'];
				$config_product_description_length = $this->config->get('theme_' . $this->config->get('config_theme') . '_product_description_length');
				$data['currency_code'] = $this->session->data['currency'];
				$var_currency = array();
				$var_currency['value'] = $this->currency->getValue($currency);
				$var_currency['symbol_left'] = $this->currency->getSymbolLeft($currency);
				$var_currency['symbol_right'] = $this->currency->getSymbolRight($currency);
				$var_currency['decimals'] = $this->currency->getDecimalPlace($currency);
				$var_currency['decimal_point'] = $this->language->get('decimal_point');
				$var_currency['thousand_point'] = $this->language->get('thousand_point');
				$data['currency'] = $var_currency;
				if ($this->config->get('revtheme_all_settings')['mobile_on']) {
					$is_mobile = $data['is_mobile'] = $this->mobiledetect->isMobile();
					$is_desctope = $data['is_desctope'] = !$this->mobiledetect->isMobile() || $this->mobiledetect->isTablet();
				} else {
					$is_mobile = $data['is_mobile'] = true;
					$is_desctope = $data['is_desctope'] = true;
				}
				
				$this->load->model('revolution/revolution');
				$settings_stikers = $this->config->get('revtheme_catalog_stiker');
				if ($settings_stikers['status']) {
					$data['stikers_status'] = true;

					if ($settings_stikers['new_status']) {
						$settings_last = $this->config->get('revtheme_catalog_last');
						if ($settings_last['last_products'] != '') {
							$date_added = array_flip(explode(',', $settings_last['last_products']));
						} else {
							if ($settings_last['filter_day']) {
								$filter_day = date('Y-m-d H:i:s', strtotime('now - ' . $settings_last['filter_day'] . ' days'));
							} else {
								$filter_day = false;
							}
							$data_last = array(
								'sort'  => 'p.date_added',
								'order' => 'DESC',
								'start' => 0,
								'limit' => $settings_last['limit'],
								'filter_day' => $filter_day
								);
							$date_added = $this->model_revolution_revolution->getLastProducts($data_last);
						}
					}

					if ($settings_stikers['best_status']) {
						$settings_best = $this->config->get('revtheme_catalog_best');
						if ($settings_best['best_products'] != '') {
							$best_seller = array_flip(explode(',', $settings_best['best_products']));
						} else {
							$data_best = array(
								'sort'  => 'p.sales',
								'order' => 'DESC',
								'start' => 0,
								'limit' => $settings_best['limit'],
								'filter_buy' => $settings_best['filter_buy']
							);
							$best_seller = $this->model_revolution_revolution->getBestProducts($data_best);
						}
					}
				} else {
					$data['stikers_status'] = false;
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$price = $this]]></search>
			<add position="before"><![CDATA[$price_number = round($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')), 2);]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$price = false;]]></search>
			<add position="before"><![CDATA[$price_number = false;]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$special = $this]]></search>
			<add position="before"><![CDATA[$special_number = round($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax')), 2);]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$special = false;]]></search>
			<add position="before"><![CDATA[$special_number = false;]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="before"><![CDATA[
				if (isset($this->session->data['compare'])) {
				if (in_array($result['product_id'], $this->session->data['compare'])) {
					$compare_class = 'in-compare';
					$button_compare = $this->language->get('button_compare_out');
				} else {
					$compare_class = '';
					$button_compare = $this->language->get('button_compare');
				}
				} else {
					$compare_class = '';
					$button_compare = $this->language->get('button_compare');
				}
				if (isset($this->session->data['wishlist'])) {
					if (in_array($result['product_id'], $this->session->data['wishlist'])) {
						$wishlist_class = 'in-wishlist';
						$button_wishlist = $this->language->get('button_wishlist_out');
					} else {
						$wishlist_class = '';
						$button_wishlist = $this->language->get('button_wishlist');
					}
				} else {
					$wishlist_class = '';
					$button_wishlist = $this->language->get('button_wishlist');
				}
				if ($this->customer->isLogged()) {
					$this->load->model('account/wishlist');
					$wishlist_register = $this->model_account_wishlist->getWishlist();
					if ($wishlist_register) {
						$wishlist_register2 = array();
						foreach ($wishlist_register as $result_wishlist_register_id) {
							$wishlist_register_id[] = $result_wishlist_register_id['product_id'];
						}
						if (in_array($result['product_id'], $wishlist_register_id)) {
							$wishlist_class = 'in-wishlist';
							$button_wishlist = $this->language->get('button_wishlist_out');
						} else {
							$wishlist_class = '';
							$button_wishlist = $this->language->get('button_wishlist');
						}
					}
				}
				
				if ($settings_stikers['new_status']) {
					if (isset($date_added[$result['product_id']])) {
						$stiker_last = true;
					} else {
						$stiker_last = false;
					}
				} else {
					$stiker_last = false;
				}
				
				if ($settings_stikers['best_status']) {
					if (isset($best_seller[$result['product_id']])) {
						$stiker_best = true;	
					} else {
						$stiker_best = false;
					}
				} else {
					$stiker_best = false;
				}
				
				if ($settings_stikers['spec_status']) {
					$stiker_spec = true;
				} else {
					$stiker_spec = false;
				}
				
				if ($settings_stikers['stock_status']) {
					$stiker_stock = true;
				} else {
					$stiker_stock = false;
				}
				
				if ($settings_stikers['upc']) {
					$stiker_upc = $result['upc'];
				} else {
					$stiker_upc = false;
				}
				if ($settings_stikers['ean']) {
					$stiker_ean = $result['ean'];
				} else {
					$stiker_ean = false;
				}
				if ($settings_stikers['jan']) {
					$stiker_jan = $result['jan'];
				} else {
					$stiker_jan = false;
				}
				if ($settings_stikers['isbn']) {
					$stiker_isbn = $result['isbn'];
				} else {
					$stiker_isbn = false;
				}
				if ($this->config->get('revtheme_product_all')['ed_izm']) {
					$ed_izm = $result['isbn'];
				} else {
					$ed_izm = false;
				}
				if ($settings_stikers['mpn']) {
					if ($settings_stikers['mpn_to_model']) {
						$stiker_mpn = $result['model'];
					} else {
						$stiker_mpn = $result['mpn'];
					}
				} else {
					$stiker_mpn = false;
				}
				if ($settings_stikers['stiker_netu_stock']) {
					$text_catalog_stiker_netu = $result['stock_status'];
				} else {
					$text_catalog_stiker_netu = $this->language->get('text_catalog_stiker_netu');
				}
				if ($settings_stikers['sklad_status']) {
					$stiker_sklad_status = $result['stock_status'];
				} else {
					$stiker_sklad_status = false;
				}
			
				//$brand = $this->model_revolution_revolution->get_pr_brand($result['product_id']);
				
				$description = '';
				$options = false;
				if ($description_options['description_on']) {
					if ($description_options['zamena_description']) {
						$description = $this->model_revolution_revolution->getAttrText($result['product_id']);
					} else {
						$description = utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, $config_product_description_length) . '...';
					}
				}
					
				if ($description_options['options_in_grid']) {
					$options = array();
					$cache = 'options_data.' . crc32((int)$this->config->get('config_language_id') . '.' . (int)$this->config->get('config_store_id') . '.' . (int)$result['product_id']);
					$pr_options = $this->cache->get($cache);
					if (!$pr_options) {
						$pr_options = $this->model_catalog_product->getProductOptions($result['product_id']);
						if ($this->config->get('revtheme_all_settings')['cache_on']) {$this->cache->set($cache, $pr_options);}
					}
				
					foreach ($pr_options as $option) {
						$product_option_value_data = array();

						foreach ($option['product_option_value'] as $option_value) {
							if ($option_value['quantity'] > 0 || $this->config->get('revtheme_product_all')['options_null_qw']) {
								if ((($this->config->get('config_customer_price') && $this->customer->isLogged()) || !$this->config->get('config_customer_price')) && (float)$option_value['price']) {
									$option_price = $this->currency->format($this->tax->calculate($option_value['price'], $result['tax_class_id'], $this->config->get('config_tax') ? 'P' : false), $currency);
								} else {
									$option_price = false;
								}

								if ($option_value['price_prefix'] == '=') {
									$price_prefix = '';
								} else {
									$price_prefix = $option_value['price_prefix'];
								}
								
								$product_option_value_data[] = array(
									'product_option_value_id' => $option_value['product_option_value_id'],
									'quantity'            	  => $option_value['quantity'],
									'model'            	  	  => $option_value['model'],
									'option_value_id'         => $option_value['option_value_id'],
									'name'                    => $option_value['name'],
									'image'                   => $option_value['image'] ? $this->model_tool_image->resize($option_value['image'], 50, 50) : '',
									'price'                   => $option_price,
									'price_prefix'            => $price_prefix,
									'option_value_disabled'   => ($option_value['quantity'] > 0) ? false : true
								);
							}
						}

						$options[] = array(
							'product_option_id'    => $option['product_option_id'],
							'product_option_value' => $product_option_value_data,
							'option_id'            => $option['option_id'],
							'name'                 => $option['name'],
							'type'                 => $option['type'],
							'value'                => $option['value'],
							'required'             => $option['required'],
							'opt_image'            => $option['opt_image']
						);
					}
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$image = $this->model_tool_image->resize($result['image']]]></search>
			<add position="before"><![CDATA[
				if ($setting_catalog_all['img_slider'] && $is_desctope) {
					$images = array();
					$this->load->model('catalog/product');
					$add_images = $this->model_catalog_product->getProductImages($result['product_id']);
					if ($setting_catalog_all['img_slider'] == '2') {
						$add_images = array_slice($add_images, 0, 1);
					}
					foreach ($add_images as $add_image) {
						$images[] = array(
							'thumb' => $this->model_tool_image->resize($add_image['image'], $setting['width'], $setting['height'])
						);
					}
				} else {
					$images = false;
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$image = $this->model_tool_image->resize('placeholder]]></search>
			<add position="before"><![CDATA[$images = false;]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="after"><![CDATA[
				'reviews' => $this->config->get('config_review_status') ? (int)$result['reviews'] : false,
				'ed_izm' => $ed_izm,
				'price_number' => $price_number,
				'special_number' => $special_number,
				'compare_class' => $compare_class,
				'wishlist_class' => $wishlist_class,
				'button_compare' => $button_compare,
				'button_wishlist' => $button_wishlist,
				'stiker_last' => $stiker_last,
				'stiker_best' => $stiker_best,
				'stiker_spec' => $stiker_spec,
				'stiker_stock' => $stiker_stock,
				'stiker_sklad_status' => $stiker_sklad_status,
				'stiker_upc' => $stiker_upc,
				'stiker_ean' => $stiker_ean,
				'stiker_jan' => $stiker_jan,
				'stiker_isbn' => $stiker_isbn,
				'stiker_mpn' => $stiker_mpn,
				'text_catalog_stiker_netu' => $text_catalog_stiker_netu,
				//'brand' => $brand,
				'images' => $images,
				'options_buy' => $result['options_buy'],
				'model' => $result['model'],
				'short_description' => html_entity_decode($result['short_description'], ENT_QUOTES, 'UTF-8'),
				'options' => $options,
				'quantity' => $result['quantity'],
				'minimum' => $result['minimum'] > 0 ? $result['minimum'] : 1,
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$tax,]]></search>
			<add position="after"><![CDATA['description' => $description,]]></add>
		</operation>
	</file>
	<file path="catalog/model/tool/image.php">
		<operation error="skip">
			<search><![CDATA[copy(DIR_IMAGE . $image_old, DIR_IMAGE . $image_new);]]></search>
			<add position="after" offset="1"><![CDATA[
				if ($this->config->get('revtheme_all_settings')['watermark_status']) {
					$this->load->model('revolution/revolution');
					$this->model_revolution_revolution->revwatermark($image_old, $image_new);
				}
				if (!empty($this->config->get('revtheme_all_settings')['webp_on'])) {
					$gd_info = gd_info();
					if($gd_info['WebP Support']) {
						$image_new_webp = 'cache/webp/' . utf8_substr($filename, 0, utf8_strrpos($filename, '.')) . '-' . (int)$width . 'x' . (int)$height . '.webp';
						if (is_file(DIR_IMAGE . $image_new) && (!is_file(DIR_IMAGE . $image_new_webp) || (filemtime(DIR_IMAGE . $image_new) > filemtime(DIR_IMAGE . $image_new_webp)))) {
							$path = '';
							$directories = explode('/', dirname($image_new_webp));
							foreach ($directories as $directory) {
								$path = $path . '/' . $directory;

								if (!is_dir(DIR_IMAGE . $path)) {
									@mkdir(DIR_IMAGE . $path, 0755);
								}
							}
							$extension = strtolower($extension);
							if ($extension == 'gif') {
								$img = imagecreatefromgif(DIR_IMAGE.$image_new);
							} elseif ($extension == 'png') {
								$img = imagecreatefrompng(DIR_IMAGE.$image_new);
							} elseif ($extension == 'jpeg' || $extension == 'jpg') {
								$img = imagecreatefromjpeg(DIR_IMAGE.$image_new);
							} else {
								$img = '';
							}
							if($img) {
								imagepalettetotruecolor($img);
								imagewebp($img, DIR_IMAGE.$image_new_webp);
								imagedestroy($img);
							}
						}
						if(is_file(DIR_IMAGE . $image_new_webp)) {
							if(stripos($this->request->server['REQUEST_URI'], 'admin') === false && isset($this->request->server['HTTP_ACCEPT']) && strpos($this->request->server['HTTP_ACCEPT'], 'image/webp') !== false) {
								$image_new = $image_new_webp;
							}
						}
					}
				}
			]]></add>
		</operation>
	</file>
	<file path="system/library/image.php">
		<operation error="skip">
			<search><![CDATA[$this->image = imagecreatefromjpeg($file);]]></search>
			<add position="after"><![CDATA[} elseif ($this->mime == 'image/svg+xml') { $this->image = $file;]]></add>
		</operation>
	</file>
	<file path="catalog/language/{ru-ru,russian}/*/*.php">
		<operation error="skip">
			<search><![CDATA[Мною прочитаны и я даю согласие с документом]]></search>
			<add position="replace"><![CDATA[Ознакомлен и согласен с текстом]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[Мною прочитан и я даю согласие с документом]]></search>
			<add position="replace"><![CDATA[Ознакомлен и согласен с текстом]]></add>
		</operation>
	</file>
	<file path="catalog/controller/startup/startup.php">
		<operation error="skip">
			<search><![CDATA[$this->registry->set('url']]></search>
			<add position="after"><![CDATA[
				$this->url->addRewrite(new revolution\rewriteurl($this->config));
				// Mobile_Detect
				$this->registry->set('mobiledetect', new Mobile_Detect);
			]]></add>
		</operation>
	</file>
	<file path="catalog/controller/module/account.php|catalog/controller/extension/module/account.php">
		<operation error="skip">
			<search><![CDATA[public function index]]></search>
			<add position="after"><![CDATA[
				if ($this->config->get('revtheme_all_settings')['revregister_status']) {
					$data = array();
					$data = $this->load->controller('revolution/account/revaccountmod');
					return $this->load->view('revolution/account/revaccountmod', $data);
				}
			]]></add>
		</operation>
	</file>
	<file path="catalog/model/account/order.php">
		<operation error="skip">
			<search><![CDATA[$order_query->row['order_id'],]]></search>
			<add position="replace"><![CDATA[$order_query->row['order_id'], 'shipping_code' => $order_query->row['shipping_code'],]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[SELECT * FROM " . DB_PREFIX . "order_option WHERE order_id = '" . (int)$order_id . "' AND order_product_id = '" . (int)$order_product_id . "']]></search>
			<add position="replace"><![CDATA[SELECT oo.*, pov.model, pov.opt_image FROM " . DB_PREFIX . "order_option oo LEFT JOIN " . DB_PREFIX . "product_option_value pov ON oo.product_option_value_id = pov.product_option_value_id WHERE order_id = '" . (int)$order_id . "' AND order_product_id = '" . (int)$order_product_id . "']]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA["SELECT * FROM " . DB_PREFIX . "order_product WHERE order_id = '" . (int)$order_id . "'"]]></search>
			<add position="replace"><![CDATA["SELECT op.*, p.image, p.sku FROM " . DB_PREFIX . "order_product op LEFT JOIN " . DB_PREFIX . "product p ON op.product_id = p.product_id WHERE order_id = '" . (int)$order_id . "'"]]></add>
		</operation>
	</file>
	<file path="catalog/controller/account/order.php">
		<operation error="skip">
			<search><![CDATA[public function info]]></search>
			<add position="after"><![CDATA[
				$this->load->language('revolution/revolution');
				$data['text_rev_order_prods'] = $this->language->get('text_rev_order_prods');
				$data['text_rev_order_detals'] = $this->language->get('text_rev_order_detals');
				$data['text_rev_order_history'] = $this->language->get('text_rev_order_history');
				$data['text_rev_order_comment'] = $this->language->get('text_rev_order_comment');
				$data['column_sku'] = $this->language->get('column_sku');
				$data['column_image'] = $this->language->get('text_rev_order_image');
				$settings = $data['settings'] = $this->config->get('revtheme_all_settings');
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[public function index]]></search>
			<add position="after"><![CDATA[
				$this->load->language('revolution/revolution');
				$data['text_rev_text_order'] = $this->language->get('text_rev_text_order');
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$product['model'],]]></search>
			<add position="replace"><![CDATA[$product['model'], 'sku' => $product['sku'],]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA['text' => $this->language->get('heading_title'),]]></search>
			<add position="replace"><![CDATA['text' => $this->language->get('text_rev_text_order'),]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$this->document->setTitle($this->language->get('text_order'));]]></search>
			<add position="replace"><![CDATA[$this->document->setTitle($this->language->get('text_order').' '.$order_id);]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$this->document->setTitle($this->language->get('heading_title'));]]></search>
			<add position="replace"><![CDATA[$this->document->setTitle($this->language->get('text_rev_text_order'));]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$data['shipping_address']]]></search>
			<add position="before"><![CDATA[
				if ($settings['revcheckout_status']) {
					if ($order_info['shipping_city'] != '' || $order_info['shipping_address_1'] != '') {
						$simbol = '';
						$country_name = '';
						if ($order_info['shipping_country'] != '' && $order_info['shipping_country_id'] != '176') {
							$simbol = ', ';
							$country_name = $order_info['shipping_country'];
						}
						$simbol2 = '';
						if ($order_info['shipping_address_1'] != '' && $order_info['shipping_city'] != '') {
							$simbol2 = ', ';
						}
						$format = '{firstname} {lastname}' . "\n" . '{company}' . "\n" . '{postcode}' . "\n" . $country_name . $simbol . '{zone}' . "\n" . '{city}' .  $simbol2 . '{address_1}' . "\n" . '{address_2}' . "\n";
					} else {
						$format = '';
					}
				}
				$this->load->model('tool/image');
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$data['shipping_address']]]></search>
			<add position="after"><![CDATA[
				if ($settings['revcheckout_status']) {
					$shipping_payment = array();
					$shipping_payment = $this->config->get('revtheme_revcheckoutshippay');
					$session_shipping_methods = preg_replace('/\..+$/','',$order_info['shipping_code']);
					if (isset($shipping_payment)) {
						if ($session_shipping_methods && !in_array('adres_on', $shipping_payment[$session_shipping_methods])) {
							$data['shipping_address'] = '';
						}
					}
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$option_data = array();]]></search>
			<add position="after"><![CDATA[
				if ($product['image']) {
					$image = $this->model_tool_image->resize($product['image'], 50, 50);
				} else {
					$image = $this->model_tool_image->resize('no_image.png', 50, 50);
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$option_data[]]]></search>
			<add position="before"><![CDATA[
				if (isset($option['opt_image'])) {
					if ($option['opt_image']) {
						$image = $option['opt_image'] ? $this->model_tool_image->resize($option['opt_image'], 50, 50) : '';
					} else {
						$image = $image;
					}
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$option_data[]]]></search>
			<add position="after"><![CDATA['model' => (isset($option['model']) ? $option['model'] : false),]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$product['model'],]]></search>
			<add position="replace"><![CDATA[$product['model'], 'sku' => $product['sku'], 'image' => $image, 'href' => $this->url->link('product/product', 'product_id=' . $product['product_id']),]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[(utf8_strlen($value) > 20 ? utf8_substr($value, 0, 20) . '..' : $value)]]></search>
			<add position="replace"><![CDATA[(utf8_strlen($value) > 50 ? utf8_substr($value, 0, 50) . '..' : $value)]]></add>
		</operation>
	</file>
	<file path="catalog/controller/account/download.php">
		<operation error="skip">
			<search><![CDATA[public function index]]></search>
			<add position="after"><![CDATA[
				$this->load->language('revolution/revolution');
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$this->language->get('heading_title')]]></search>
			<add position="replace"><![CDATA[$this->language->get('text_rev_text_download')]]></add>
		</operation>
	</file>
	<file path="catalog/controller/account/forgotten.php">
		<operation error="skip">
			<search><![CDATA[public function index]]></search>
			<add position="after"><![CDATA[
				$this->load->language('revolution/revolution');
				$data['forgotten_butten'] = $this->language->get('forgotten_butten');
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$this->language->get('text_email')]]></search>
			<add position="replace"><![CDATA[$this->language->get('text_rev_account_text_email')]]></add>
		</operation>
	</file>
	<file path="catalog/controller/checkout/success.php">
		<operation error="skip">
			<search><![CDATA[$data['continue']]]></search>
			<add position="before"><![CDATA[
				if (isset($this->config->get('revtheme_all_settings')['revregister_status']) && $this->config->get('revtheme_all_settings')['revregister_status']) {
					$this->load->language('revolution/revolution');
					if ($this->customer->isLogged()) {
						if (isset($this->config->get('revtheme_all_settings')['revaccount_files']) && !$this->config->get('revtheme_all_settings')['revaccount_files']) {
							$data['text_message'] = sprintf($this->language->get('text_rev_success_customer_2'), $this->url->link('account/account', '', true), $this->url->link('information/contact'));
						} else {
							$data['text_message'] = sprintf($this->language->get('text_rev_success_customer'), $this->url->link('account/account', '', true), $this->url->link('account/download', '', true), $this->url->link('information/contact'));
						}
					} else {
						$data['text_message'] = sprintf($this->language->get('text_rev_success_guest'), $this->url->link('information/contact'));
					}
				}
			]]></add>
		</operation>
	</file>
	<file path="catalog/controller/mail/order.php">
		<operation error="skip">
			<search><![CDATA[$data['shipping_address']]]></search>
			<add position="before"><![CDATA[
				$settings = $data['settings'] = $this->config->get('revtheme_all_settings');
				$language->load('revolution/revolution');
				$data['text_date_added'] = $language->get('text_rev_order_date_added');
				$data['text_sku'] = $language->get('column_sku');
				$data['text_image'] = $language->get('text_rev_order_image');
				$data['text_footer'] = $language->get('text_rev_order_footer');
				$data['text_rev_order_prods'] = $language->get('text_rev_order_prods');
				$data['text_rev_order_detals'] = $language->get('text_rev_order_detals');
				$data['text_rev_order_history'] = $language->get('text_rev_order_history');
				$data['text_rev_order_comment'] = $language->get('text_rev_order_comment');
				$data['text_rev_order_name'] = $language->get('entry_rev_p_name');
				$data['rev_order_name'] = $order_info['firstname'] . ' ' . $order_info['lastname'];
				if ($settings['revcheckout_status']) {
					if ($settings['revregister_status']) {
						$data['text_greeting'] = $language->get('text_rev_mail_new_greeting');
						if ($order_info['customer_id']) {
							$data['text_link'] = '';
							if ($settings['revaccount_orders']) {
								$data['text_link'] = sprintf($language->get('text_rev_mail_new_link'), $order_info['store_url'] . 'index.php?route=account/order/info&order_id=' . $order_info['order_id']);
							}
						}
						if ($download_status) {
							$data['text_download'] = '';
							if ($settings['revaccount_files']) {
								$data['text_download'] = sprintf($language->get('text_rev_mail_new_download'), $order_info['store_url'] . 'index.php?route=account/download');
							}
						}
					}
					if ($order_info['shipping_city'] != '' || $order_info['shipping_address_1'] != '') {
						$simbol = '';
						$country_name = '';
						if ($order_info['shipping_country'] != '' && $order_info['shipping_country_id'] != '176') {
							$simbol = ', ';
							$country_name = $order_info['shipping_country'];
						}
						$simbol2 = '';
						if ($order_info['shipping_address_1'] != '' && $order_info['shipping_city'] != '') {
							$simbol2 = ', ';
						}
						$format = '{firstname} {lastname}' . "\n" . '{company}' . "\n" . '{postcode}' . "\n" . $country_name . $simbol . '{zone}' . "\n" . '{city}' .  $simbol2 . '{address_1}' . "\n" . '{address_2}' . "\n";
					} else {
						$format = '';
					}
				}
				$this->load->model('tool/image');
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$data['shipping_address']]]></search>
			<add position="after"><![CDATA[
				if ($settings['revcheckout_status']) {
					$shipping_payment = array();
					$shipping_payment = $this->config->get('revtheme_revcheckoutshippay');
					$session_shipping_methods = preg_replace('/\..+$/','',$order_info['shipping_code']);
					if (isset($shipping_payment)) {
						if ($session_shipping_methods && !in_array('adres_on', $shipping_payment[$session_shipping_methods])) {
							$data['shipping_address'] = '';
						}
					}
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$option_data = array();]]></search>
			<add position="after"><![CDATA[
				if ($order_product['image']) {
					$image = $this->model_tool_image->resize($order_product['image'], 50, 50);
				} else {
					$image = $this->model_tool_image->resize('no_image.png', 50, 50);
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$option_data[]]]></search>
			<add position="before"><![CDATA[
				if (isset($order_option['opt_image'])) {
					if ($order_option['opt_image']) {
						$image = $order_option['opt_image'] ? $this->model_tool_image->resize($order_option['opt_image'], 50, 50) : '';
					} else {
						$image = $image;
					}
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$option_data[]]]></search>
			<add position="after"><![CDATA['model' => (isset($order_option['model']) ? $order_option['model'] : false),]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$order_product['model'],]]></search>
			<add position="replace"><![CDATA[$order_product['model'], 'sku' => $order_product['sku'], 'image' => $image, 'href' => $this->url->link('product/product', 'product_id=' . $order_product['order_product_id']),]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[(utf8_strlen($value) > 20 ? utf8_substr($value, 0, 20) . '..' : $value)]]></search>
			<add position="replace"><![CDATA[(utf8_strlen($value) > 40 ? utf8_substr($value, 0, 40) . '..' : $value)]]></add>
		</operation>
	</file>
	<file path="catalog/model/checkout/order.php">
		<operation error="skip">
			<search><![CDATA[("SELECT * FROM " . DB_PREFIX . "order_product WHERE order_id = '" . (int)$order_id . "'")]]></search>
			<add position="replace"><![CDATA[("SELECT *, op.quantity as quantity, op.price as price FROM " . DB_PREFIX . "order_product op LEFT JOIN " . DB_PREFIX . "product p ON op.product_id = p.product_id WHERE op.order_id = '" . (int)$order_id . "'")]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[("SELECT * FROM " . DB_PREFIX . "order_option WHERE order_id = '" . (int)$order_id . "' AND order_product_id = '" . (int)$order_product_id . "'")]]></search>
			<add position="replace"><![CDATA[("SELECT * FROM " . DB_PREFIX . "order_option oo LEFT JOIN " . DB_PREFIX . "product_option_value pov ON oo.product_option_value_id = pov.product_option_value_id WHERE order_id = '" . (int)$order_id . "' AND order_product_id = '" . (int)$order_product_id . "'")]]></add>
		</operation>
	</file>
	<file path="catalog/controller/common/column_left.php">
		<operation error="skip">
			<search><![CDATA[return $this->load->view]]></search>
			<add position="before"><![CDATA[
				if ($route == 'revolution/revblog_blog' && isset($this->request->get['revblog_id'])) {
					if (isset($this->config->get('revblog_settings')['related_left_status']) && $this->config->get('revblog_settings')['related_left_status']) {
						$this->load->model('revolution/revolution');
						$blog_related_results = $this->model_revolution_revolution->getBlogRelated($this->request->get['revblog_id']);
						if ($blog_related_results) {
							$data['modules'][] = $this->load->controller('revolution/revblog_blog/related_left');
						}
					}
				}
			]]></add>
		</operation>
	</file>
	<file path="catalog/controller/common/{column_left,column_right,content_bottom,content_top}.php">
		<operation error="skip">
			<search><![CDATA[$layout_id = 0;]]></search>
			<add position="after"><![CDATA[
				if ($route == 'revolution/revblog_blog' && isset($this->request->get['revblog_id'])) {
					$this->load->model('revolution/revolution');
					$layout_id = $this->model_revolution_revolution->getBlogLayoutId($this->request->get['revblog_id']);
				}	
				if ($route == 'revolution/revblog_category' && isset($this->request->get['revblog_category_id'])) {
					$this->load->model('revolution/revolution');
					$layout_id = $this->model_revolution_revolution->getBlogCategoryLayoutId($this->request->get['revblog_category_id']);
				}
			]]></add>
		</operation>
	</file>
	<file path="catalog/language/*/information/contact.php">
		<operation error="skip">
			<search><![CDATA[text_success]]></search>
			<add position="replace"><![CDATA[text_message]]></add>
		</operation>
	</file>
	
</modification>
