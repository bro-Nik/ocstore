{% extends 'modals/base.twig' %}

{% set heading = popuporder_heading_title %}
{% if (minimum > 1) %} 
	{% set attention = text_minimum %}
{% endif %} 

{% block content %}
	<form method="post" enctype="multipart/form-data" id="purchase-form">
		<input name="product_id" value="{{ product_id }}" style="display: none;" type="hidden" />
		<input class="product_max" value="{{ quantity }}" style="display: none;" type="hidden" />
		<table class="display-products-cart porder">
			<tbody>
				<tr>
					<td class="image">
						{% if (thumb) %} 
							<img src="{{ thumb }}" title="{{ popuporder_heading_title }}" alt="{{ popuporder_heading_title }}" />
						{% endif %} 
					</td>
					<td class="name">
						{{ product_name }} 
						{% if (discounts and not special) %} 
							<div class="discounts">
								{% for discount in discounts %} 
									<span>{{ discount['quantity'] }}{{ text_discount }}{{ discount['price'] }}</span><br/>
								{% endfor %} 
							</div>
						{% endif %} 
					</td>
					<td class="qt">
						{% if (not stock_warning or zakaz) %} 
						<div class="number">
							<div class="frame-change-count">
						<div class="btn-plus">
							<button type="button" data-action="+">+</button>
						</div>
						<div class="btn-minus">
							<button type="button" data-action="-">-</button>
						</div>
					</div>
							<input name="quantity" value="{{ minimum }}"  class="all_quantity plus-minus" onkeyup="validate_pole_popuporder(this);" onchange="validate_pole_popuporder(this);" />
						</div>
						{% endif %} 
					</td>
					<td class="totals">
						{% if (not special) %} 
							<span id="main-price">{{ price }}</span>
							<input type="hidden" name="price" value="{{ price }}" />
						{% else %} 
							<span id="main-price" class="spec">{{ price }}</span>
							<span id="special-price">{{ special }}</span>
							<input type="hidden" name="price" value="{{ special }}" />
						{% endif %} 
					</td>
				</tr>
			</tbody>
		</table>
		<div class="mobile-products-cart">
			<div>
			<div class="image">
				{% if (thumb) %} 
					<img src="{{ thumb }}" title="{{ popuporder_heading_title }}" alt="{{ popuporder_heading_title }}" />
				{% endif %} 
			</div>
			<div class="name">
				{{ product_name }} 
				{% if (discounts and not special) %} 
					<div class="discounts">
						{% for discount in discounts %} 
							<span>{{ discount['quantity'] }}{{ text_discount }}{{ discount['price'] }}</span><br/>
						{% endfor %} 
					</div>
				{% endif %} 
			</div>
			<div class="qt">
				{% if (not stock_warning or zakaz) %} 
				<div class="number">
					<div class="frame-change-count">
						<div class="btn-plus">
							<button type="button" data-action="+">+</button>
						</div>
						<div class="btn-minus">
							<button type="button" data-action="-">-</button>
						</div>
					</div>
					<input name="quantity" value="{{ minimum }}"  class="all_quantity plus-minus" onkeyup="validate_pole_popuporder(this);" onchange="validate_pole_popuporder(this);" />
				</div>
				{% endif %} 
			</div>
			<div class="totals">
				{% if (not special) %} 
					<span id="main-price" class="mobi">{{ price }}</span>
				{% else %} 
					<span id="main-price" class="mobi spec">{{ price }}</span>
					<span id="special-price" class="mobi">{{ special }}</span>
				{% endif %} 
			</div>		
			</div>
		</div>
		{% if (options) %} 
		<div class="well well-sm product-info">
		{% for option in options %} 
				{% if (option['type'] == 'select') %} 
				<div class="form-group{{ option['required'] ? ' required' : '' }}">
					<label class="control-label" for="input-option{{ option['product_option_id'] }}">{{ option['name'] }}:</label>
					<select onchange="validate_pole_popuporder(this)" name="option[{{ option['product_option_id'] }}]" id="input-option{{ option['product_option_id'] }}" class="form-control">
					<option value="">{{ text_select }}</option>
					{% for option_value in option['product_option_value'] %} 
					<option value="{{ option_value['product_option_value_id'] }}">{{ option_value['name'] }} 
					{% if (opt_price) %} 
						{% if (option_value['price']) %} 
							<span class="option_price">({{ option_value['price_prefix'] }}{{ option_value['price'] }})</span>
						{% endif %} 
					{% endif %} 
					{% endfor %} 
					</select>
				</div>
				{% endif %} 
				{% if (option['type'] == 'radio') %} 
					<div class="form-group{{ option['required'] ? ' required' : '' }}">
						<label class="control-label">{{ option['name'] }}:</label>
						<div id="input-option{{ option['product_option_id'] }}">
							{% for option_value in option['product_option_value'] %} 
								<div class="radio{% if (option['opt_image']) %} opt_with_img{% endif %}">
									<input onchange="validate_pole_popuporder(this);" type="radio" name="option[{{ option['product_option_id'] }}]" value="{{ option_value['product_option_value_id'] }}" id="{{ option['product_option_id'] }}_{{ option_value['product_option_value_id'] }}" />
									<label {% if (option['opt_image']) %}data-toggle="tooltip" title="{{ option_value['name'] }}"{% endif %} class="btn btn-default {% if (option_value['image']) %}label-in-img{% endif %}" for="{{ option['product_option_id'] }}_{{ option_value['product_option_value_id'] }}">
										{% if (option_value['image']) %} 
											<img src="{{ option_value['image'] }}" alt="{{ option_value['name'] ~ option_value['price'] ? ' ' ~ option_value['price_prefix'] ~ option_value['price'] : '' }}" class="img-thumbnail" /> {% if (not option['opt_image']) %}{{ option_value['name'] }}{% endif %} 
										{% else %} 
											<span>{{ option_value['name'] }}</span>
										{% endif %} 
										{% if (option_value['price']) %} 
											<span class="option_price">{{ option_value['price_prefix'] }}{{ option_value['price'] }}</span>
										{% endif %} 
										<i class="fa fa-check"></i>	
									</label>
								</div>
							{% endfor %} 
						</div>
					</div>
				{% endif %} 
				{% if (option['type'] == 'checkbox') %} 
					<div class="form-group{{ option['required'] ? ' required' : '' }}">
						<label class="control-label">{{ option['name'] }}:</label>
						<div id="input-option{{ option['product_option_id'] }}">
							{% for option_value in option['product_option_value'] %} 
								<div class="radio checkbox{% if (option['opt_image']) %} opt_with_img{% endif %}">
									<input onchange="validate_pole_popuporder(this);" type="checkbox" name="option[{{ option['product_option_id'] }}][]" value="{{ option_value['product_option_value_id'] }}" id="{{ option['product_option_id'] }}_{{ option_value['product_option_value_id'] }}" />
									<label {% if (option['opt_image']) %}data-toggle="tooltip" title="{{ option_value['name'] }}"{% endif %} class="btn btn-default {% if (option_value['image']) %}label-in-img{% endif %}" for="{{ option['product_option_id'] }}_{{ option_value['product_option_value_id'] }}">
										{% if (option_value['image']) %} 
											<img src="{{ option_value['image'] }}" alt="{{ option_value['name'] ~ option_value['price'] ? ' ' ~ option_value['price_prefix'] ~ option_value['price'] : '' }}" class="img-thumbnail" /> {% if (not option['opt_image']) %}{{ option_value['name'] }}{% endif %} 
										{% else %} 
											<span>{{ option_value['name'] }}</span>
										{% endif %} 
										{% if (option_value['price']) %} 
											<span class="option_price">{{ option_value['price_prefix'] }}{{ option_value['price'] }}</span>
										{% endif %} 
										<i class="fa fa-check"></i>
									</label>
								</div>
							{% endfor %} 
						</div>
					</div>
				{% endif %} 
				{% if (option['type'] == 'image') %} 
					<div class="form-group{{ option['required'] ? ' required' : '' }}">
						<label class="control-label">{{ option['name'] }}:</label>
						<div id="input-option{{ option['product_option_id'] }}">
							{% for option_value in option['product_option_value'] %} 
								<div class="radio{% if (option['opt_image']) %} opt_with_img{% endif %}">
									<input onchange="validate_pole_popuporder(this);" type="radio" name="option[{{ option['product_option_id'] }}]" value="{{ option_value['product_option_value_id'] }}" id="{{ option['product_option_id'] }}_{{ option_value['product_option_value_id'] }}" />
									<label {% if (option['opt_image']) %}data-toggle="tooltip" title="{{ option_value['name'] }}"{% endif %} class="btn btn-default {% if (option_value['image']) %}label-in-img{% endif %}" for="{{ option['product_option_id'] }}_{{ option_value['product_option_value_id'] }}">
										{% if (option_value['image']) %} 
											<img src="{{ option_value['image'] }}" alt="{{ option_value['name'] ~ option_value['price'] ? ' ' ~ option_value['price_prefix'] ~ option_value['price'] : '' }}" class="img-thumbnail" /> {% if (not option['opt_image']) %}{{ option_value['name'] }}{% endif %} 
										{% else %} 
											<span>{{ option_value['name'] }}</span>
										{% endif %} 
										{% if (option_value['price']) %} 
											<span class="option_price">{{ option_value['price_prefix'] }}{{ option_value['price'] }}</span>
										{% endif %} 
										<i class="fa fa-check"></i>	
									</label>
								</div>
							{% endfor %} 
						</div>
					</div>
				{% endif %} 
				{% if (option['type'] == 'text') %} 
				<div class="form-group{{ option['required'] ? ' required' : '' }}">
					<label class="control-label" for="input-option{{ option['product_option_id'] }}">{{ option['name'] }}:</label>
					<input type="text" name="option[{{ option['product_option_id'] }}]" value="{{ option['value'] }}" placeholder="{{ option['name'] }}" id="input-option{{ option['product_option_id'] }}" class="form-control" />
				</div>
				{% endif %} 
				{% if (option['type'] == 'textarea') %} 
				<div class="form-group{{ option['required'] ? ' required' : '' }}">
					<label class="control-label" for="input-option{{ option['product_option_id'] }}">{{ option['name'] }}:</label>
					<textarea name="option[{{ option['product_option_id'] }}]" rows="5" placeholder="{{ option['name'] }}" id="input-option{{ option['product_option_id'] }}" class="form-control">{{ option['value'] }}</textarea>
				</div>
				{% endif %} 
				{% if (option['type'] == 'file') %} 
				<div class="form-group{{ option['required'] ? ' required' : '' }}">
					<label class="control-label">{{ option['name'] }}:</label>
					<button type="button" id="button-upload{{ option['product_option_id'] }}" data-loading-text="{{ text_loading }}" class="btn btn-default btn-block"><i class="fa fa-upload"></i> {{ button_upload }}</button>
					<input type="hidden" name="option[{{ option['product_option_id'] }}]" value="" id="input-option{{ option['product_option_id'] }}" />
				</div>
				{% endif %} 
				{% if (option['type'] == 'date') %} 
				<div class="form-group{{ option['required'] ? ' required' : '' }}">
					<label class="control-label" for="input-option{{ option['product_option_id'] }}">{{ option['name'] }}:</label>
					<div class="input-group date">
					<input type="text" name="option[{{ option['product_option_id'] }}]" value="{{ option['value'] }}" data-date-format="YYYY-MM-DD" id="input-option{{ option['product_option_id'] }}" class="form-control" />
					<span class="input-group-btn">
					<button class="btn btn-default" type="button"><i class="fa fa-calendar"></i></button>
					</span></div>
				</div>
				{% endif %} 
				{% if (option['type'] == 'datetime') %} 
				<div class="form-group{{ option['required'] ? ' required' : '' }}">
					<label class="control-label" for="input-option{{ option['product_option_id'] }}">{{ option['name'] }}:</label>
					<div class="input-group datetime">
					<input type="text" name="option[{{ option['product_option_id'] }}]" value="{{ option['value'] }}" data-date-format="YYYY-MM-DD HH:mm" id="input-option{{ option['product_option_id'] }}" class="form-control" />
					<span class="input-group-btn">
					<button type="button" class="btn btn-default"><i class="fa fa-calendar"></i></button>
					</span></div>
				</div>
				{% endif %} 
				{% if (option['type'] == 'time') %} 
				<div class="form-group{{ option['required'] ? ' required' : '' }}">
					<label class="control-label" for="input-option{{ option['product_option_id'] }}">{{ option['name'] }}:</label>
					<div class="input-group time">
					<input type="text" name="option[{{ option['product_option_id'] }}]" value="{{ option['value'] }}" data-date-format="HH:mm" id="input-option{{ option['product_option_id'] }}" class="form-control" />
					<span class="input-group-btn">
					<button type="button" class="btn btn-default"><i class="fa fa-calendar"></i></button>
					</span></div>
				</div>
				{% endif %} 
				{% endfor %} 
		</div>
		{% endif %} 
				
		{% if (recurrings) %} 
		<div class="info-heading-2">{{ text_payment_recurring }}</div>
		<div class="form-group required">
			<select name="recurring_id" class="form-control">
				<option value="">{{ text_select }}</option>
				{% for recurring in recurrings %} 
				<option value="{{ recurring['recurring_id'] }}">{{ recurring['name'] }}</option>
				{% endfor %} 
			</select>
			<div class="help-block" id="recurring-description"></div>
		</div>
		{% endif %} 

		<div class="payment-info">
			{% if (revtheme_catalog_popuporder['firstname']) %} 
			<div>
				<label>{% if (revtheme_catalog_popuporder['firstname'] == 2) %}<span class="required">*</span>{% endif %}{{ enter_firstname }}</label>
				<input name="firstname" value="{{ firstname }}" />
			</div>
			{% endif %} 
			{% if (revtheme_catalog_popuporder['telephone']) %} 
			<div>
				<label>{% if (revtheme_catalog_popuporder['telephone'] == 2) %}<span class="required">*</span>{% endif %}{{ enter_telephone }}</label>
				<input name="telephone" value="{{ telephone }}" {% if (telephone_mask) %} data-mask="{{ telephone_mask }}" {% endif %} />
			</div>
			{% endif %} 
			{% if (revtheme_catalog_popuporder['email']) %} 
			<div>
				<label>{% if (revtheme_catalog_popuporder['email'] == 2) %}<span class="required">*</span>{% endif %}{{ enter_email }}</label>
				<input name="email" value="{{ email }}" />
			</div>
			{% endif %} 
			{% if (revtheme_catalog_popuporder['comment']) %} 
			<div>
				<label>{% if (revtheme_catalog_popuporder['comment'] == 2) %}<span class="required">*</span>{% endif %}{{ enter_comment }}</label>
				<textarea name="comment">{{ comment }}</textarea>
			</div>
			{% endif %} 
		</div>
		{% if (text_agree_pol_konf) %} 
			<div class="rev_pol_konf pull-right text-right">
				<span>{{ text_agree_pol_konf }}</span>
				<input type="checkbox" name="agree_pol_konf" checked="checked" />
			</div>
		{% endif %} 
	</form>
{% endblock %}

{% block footer %}
  <button class="continue-shopping" data-action="close">{{ button_shopping }}</button>
		{% if (not stock_warning or zakaz) %} 
			<a id="popup-checkout-button" data-action="submit">{{ button_checkout }}</a>
		{% endif %} 

{% if not stock_warning or zakaz %} 
<!-- // Проверка условия stock_warning или zakaz -->
<!-- if ({{ not stock_warning or zakaz ? 'true' : 'false' }}) { -->
	<script src="catalog/view/javascript/jquery/datetimepicker/moment/moment.min.js"></script>
	<script src="catalog/view/javascript/jquery/datetimepicker/bootstrap-datetimepicker.min.js"></script>
	<link href="catalog/view/javascript/jquery/datetimepicker/bootstrap-datetimepicker.min.css" rel="stylesheet" type="text/css" />
<script>
  // Загрузка необходимых ресурсов
  // const loadResources = async () => {
  //   const loadScript = (src) => new Promise((resolve, reject) => {
  //     const script = document.createElement('script');
  //     script.src = src;
  //     script.onload = resolve;
  //     script.onerror = reject;
  //     document.head.appendChild(script);
  //   });
  //
  //   const loadStyle = (href) => {
  //     const link = document.createElement('link');
  //     link.rel = 'stylesheet';
  //     link.type = 'text/css';
  //     link.href = href;
  //     document.head.appendChild(link);
  //   };
  //
  //   loadStyle('catalog/view/javascript/jquery/datetimepicker/bootstrap-datetimepicker.min.css');
  //   await loadScript('catalog/view/javascript/jquery/datetimepicker/moment/moment.min.js');
  //   await loadScript('catalog/view/javascript/jquery/datetimepicker/bootstrap-datetimepicker.min.js');
  // };

  // Автовыбор первой опции
  const autoSelectOptions = () => {
    {% if (revtheme_product_all['option_f_auto']) %}
    document.querySelectorAll('#popup-order-okno .product-info .form-group').forEach(group => {
      const firstInput = group.querySelector('input[type="radio"], input[type="checkbox"]');
      if (firstInput) {
        firstInput.checked = true;
        firstInput.dispatchEvent(new Event('change'));
      }

      const firstSelect = group.querySelector('select');
      if (firstSelect) {
        firstSelect.dispatchEvent(new Event('change'));
      }
    });
    {% endif %}
  };

  // Инициализация datetimepicker
  const initDateTimePickers = () => {
    document.querySelectorAll('.date').forEach(el => {
      new datetimepicker(el, { pickTime: false });
    });

    document.querySelectorAll('.datetime').forEach(el => {
      new datetimepicker(el, { pickDate: true, pickTime: true });
    });

    document.querySelectorAll('.time').forEach(el => {
      new datetimepicker(el, { pickDate: false });
    });
  };

  // Обработчик загрузки файлов
  const initFileUpload = () => {
    document.addEventListener('click', (e) => {
      const button = e.target.closest('button[id^="button-upload"]');
      if (!button) return;

      e.preventDefault();
      
      // Удаляем старую форму
      const oldForm = document.getElementById('form-upload');
      if (oldForm) oldForm.remove();

      // Создаем новую форму
      const form = document.createElement('form');
      form.id = 'form-upload';
      form.enctype = 'multipart/form-data';
      form.style.display = 'none';
      
      const fileInput = document.createElement('input');
      fileInput.type = 'file';
      fileInput.name = 'file';
      
      form.appendChild(fileInput);
      document.body.appendChild(form);

      // Обработка выбора файла
      fileInput.addEventListener('change', async () => {
        if (!fileInput.files.length) return;

        button.disabled = true;
        button.innerHTML = 'Загрузка...';

        try {
          const formData = new FormData(form);
          const response = await fetch('index.php?route=tool/upload', {
            method: 'POST',
            body: formData
          });

          const result = await response.json();

          // Удаляем предыдущие ошибки
          document.querySelectorAll('.text-danger').forEach(el => el.remove());

          if (result.error) {
            const errorDiv = document.createElement('div');
            errorDiv.className = 'text-danger';
            errorDiv.textContent = result.error;
            button.parentNode.insertBefore(errorDiv, button.nextSibling);
          } else if (result.success) {
            alert(result.success);
            const targetInput = button.parentNode.querySelector('input');
            if (targetInput) {
              targetInput.value = result.code;
            }
          }
        } catch (error) {
          console.error('Upload error:', error);
          alert(`Ошибка: ${error.message}`);
        } finally {
          button.disabled = false;
          button.innerHTML = 'Загрузить';
        }
      });

      // Триггерим клик по полю файла
      fileInput.click();
    });
  };

  // Валидация поля количества
  // const validateQuantityInput = (input, action) => {
  function window.validate_pole_popuporder = function(input, action) {
    input.value = input.value.replace(/[^\d,]/g, '');
    const maxInput = document.querySelector('input.product_max');
    const maxValue = maxInput ? parseInt(maxInput.value) : 9999;
    const minValue = {{ minimum }};
    
    if (input.value === '') input.value = minValue;
    
    const quantityInput = document.querySelector('input.all_quantity');
    if (!quantityInput) return;
    
    let quantity = parseInt(quantityInput.value) || minValue;

    {% if (q_zavisimost) %}
      if (action === '+' && quantity < maxValue) {
        quantity++;
      } else if (action === '-' && quantity > minValue) {
        quantity--;
      } else if (action === '=' && quantity < maxValue) {
        // Ничего не меняем
      }

      if (quantity < 1 || quantity < minValue) {
        quantity = minValue;
      } else if (quantity > maxValue) {
        quantity = maxValue;
      }
    {% else %}
      if (action === '+') {
        quantity++;
      } else if (action === '-' && quantity > minValue) {
        quantity--;
      }

      if (quantity < 1 || quantity < minValue) {
        quantity = minValue;
      }
    {% endif %}

    quantityInput.value = quantity;
    input.value = quantity;
    updateProductPrices(quantity);
  };

  // Обновление цен товара
  const updateProductPrices = async (quantity) => {
    const form = document.getElementById('purchase-form');
    if (!form) return;

    const formData = new FormData();
    
    // Собираем данные формы
    const fields = [
      'input[type="hidden"]',
      'input[type="text"]',
      'input[type="radio"]:checked',
      'input[type="checkbox"]:checked',
      'select',
      'textarea'
    ];

    fields.forEach(selector => {
      form.querySelectorAll(selector).forEach(field => {
        if (field.name) {
          if (field.multiple) {
            Array.from(field.selectedOptions).forEach(option => {
              formData.append(`${field.name}[]`, option.value);
            });
          } else {
            formData.append(field.name, field.value);
          }
        }
      });
    });

    formData.append('quantity', quantity);

    try {
      const response = await fetch('index.php?route=product/product/update_prices', {
        method: 'POST',
        body: formData
      });
      const data = await response.json();

      {% if (options) %}
        const image = form.querySelector('.image img');
        if (image && data.opt_image_2) {
          image.src = data.opt_image_2;
          image.style.width = '100px';
          image.style.height = '100px';
        }
      {% endif %}
      
      {% if (price_number > 0) %}
        {% if (discounts and not special) %}
          const price = data.special_n;
        {% else %}
          const price = data.price_n;
        {% endif %}
        
        {% if (revtheme_product_all['recalc_price_animate']) %}
          animatePriceChange('#main-price', price);
        {% else %}
          updatePriceDisplay('#main-price', price);
        {% endif %}
        
        {% if (special) %}
          const specialPrice = data.special_n;
          {% if (revtheme_product_all['recalc_price_animate']) %}
            animatePriceChange('#special-price', specialPrice);
          {% else %}
            updatePriceDisplay('#special-price', specialPrice);
          {% endif %}
        {% endif %}
      {% endif %}
    } catch (error) {
      console.error('Price update error:', error);
    }
  };

  // Анимация изменения цены
  const animatePriceChange = (selector, newPrice) => {
    const elements = document.querySelectorAll(`${selector}`);
    if (!elements.length) return;

    elements.forEach(el => {
      const startPrice = parseFloat(el.textContent.replace(/\s*/g, '') || 0;
      const duration = 500;
      const startTime = performance.now();
      
      const animate = (currentTime) => {
        const elapsed = currentTime - startTime;
        const progress = Math.min(elapsed / duration, 1);
        const currentValue = startPrice + (newPrice - startPrice) * progress;
        
        el.textContent = priceFormat(currentValue);
        
        if (progress < 1) {
          requestAnimationFrame(animate);
        }
      };
      
      requestAnimationFrame(animate);
    });
  };

  // Обновление отображения цены без анимации
  const updatePriceDisplay = (selector, price) => {
    document.querySelectorAll(selector).forEach(el => {
      el.textContent = priceFormat(price);
    });
  };

  // Форматирование цены
  const priceFormat = (n) => {
    const c = {{ currency.decimals is empty ? 0 : currency.decimals }};
    const d = '{{ currency.decimal_point }}';
    const t = '{{ currency.thousand_point }}';
    const sLeft = '{{ currency.symbol_left }}';
    const sRight = '{{ currency.symbol_right }}';
    n = n * {{ currency.value }};
    
    let i = parseInt(n = Math.abs(n).toFixed(c)) + '';
    let j = (j = i.length) > 3 ? j % 3 : 0;
    
    return sLeft + (j ? i.substr(0, j) + t : '') + 
           i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + 
           (c ? d + Math.abs(n - i).toFixed(c).slice(2) : '') + 
           sRight;
  };

  // Инициализация при загрузке страницы
  (async () => {
    await loadResources();
    initDateTimePickers();
    autoSelectOptions();
    initFileUpload();
    
    {% if (minimum > 1) %}
      updateProductPrices({{ minimum }});
    {% endif %}
  })();
}
// window.validate_pole_popuporder = validate_pole_popuporder;

// Инициализация после загрузки DOM
    
    // Обработчики для кнопок количества
    document.querySelectorAll('.number button').forEach(btn => {
      btn.addEventListener('click', function() {
        console.log('Button clicked'); // Проверка клика
        const action = this.getAttribute('data-action');
        const input = this.closest('.number').querySelector('input[type="text"]');
        if (input && action) {
          window.validate_pole_popuporder(input, action);
        }
      });
</script>
{% endif %}
{% endblock %}
