---
services:
  web:
    image: nginx:1.27-alpine
    env_file: .env
    ports:
      - "80:80"
    volumes:
      - .:/var/www/html
      - ./nginx/nginx.conf:/etc/nginx/templates/default.conf.template
      - ./nginx/redirects:/etc/nginx/redirects
    command: /bin/sh -c "envsubst '$$NGINX_SERVER_NAME' < /etc/nginx/templates/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    depends_on:
      - php
      - db

  php:
    build:
      context: ./php
      dockerfile: Dockerfile-php
    env_file:
      - .env
    volumes:
      - .:/var/www/html
      - ./storage:/var/www/storage

  node:
    image: node:16
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    command: npm run dev  # запуск Webpack в watch-режиме
    # command: npm run build  # запуск Webpack с минификацией

  db:
    image: mariadb:11.4
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USER_NAME}
      MYSQL_PASSWORD: ${DB_USER_PASSWORD}
      MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
    volumes:
      - ./db:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - "8082:8080"
    depends_on:
      - db

  redis:
    image: redis:7.2-alpine
    restart: unless-stopped
    # ports:
    #   - "6379:6379"
    volumes:
      - redis_data:/data

  # phpredisadmin:
  #   image: erikdubbelboer/phpredisadmin
  #   environment:
  #     - REDIS_HOST=redis  # Имя сервиса Redis в Docker
  #     - REDIS_PORT=6379
  #     # - REDIS_PASS=${REDIS_PASSWORD}  # Если используется пароль
  #   ports:
  #     - "8083:80"
  #   depends_on:
  #     - redis  # Важно указать зависимость
  redisinsight:
    image: redislabs/redisinsight
    ports:
      - "8001:8001"

volumes:
  mysql_data:
  redis_data:
